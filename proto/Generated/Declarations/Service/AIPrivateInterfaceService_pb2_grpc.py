# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from Declarations.Model.AIPrivateInterfaceService import FetchInitialData_pb2 as Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_FetchInitialData__pb2
from Declarations.Model.AIPrivateInterfaceService import ReportResult_pb2 as Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_ReportResult__pb2


class AIPrivateInterfaceServiceStub(object):
    """The service used by the PuglIA-developed back-end to connect with Lisari's gateway.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FetchInitialData = channel.unary_unary(
                '/AIPrivateInterfaceService/FetchInitialData',
                request_serializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_FetchInitialData__pb2.FetchInitialDataRequest.SerializeToString,
                response_deserializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_FetchInitialData__pb2.FetchInitialDataResponse.FromString,
                )
        self.ReportResult = channel.unary_unary(
                '/AIPrivateInterfaceService/ReportResult',
                request_serializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_ReportResult__pb2.ReportResultRequest.SerializeToString,
                response_deserializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_ReportResult__pb2.ReportResultResponse.FromString,
                )


class AIPrivateInterfaceServiceServicer(object):
    """The service used by the PuglIA-developed back-end to connect with Lisari's gateway.
    """

    def FetchInitialData(self, request, context):
        """Used to get the necessary resources to proceed with processing.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportResult(self, request, context):
        """Used to report the completion of the AI processing operations.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AIPrivateInterfaceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FetchInitialData': grpc.unary_unary_rpc_method_handler(
                    servicer.FetchInitialData,
                    request_deserializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_FetchInitialData__pb2.FetchInitialDataRequest.FromString,
                    response_serializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_FetchInitialData__pb2.FetchInitialDataResponse.SerializeToString,
            ),
            'ReportResult': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportResult,
                    request_deserializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_ReportResult__pb2.ReportResultRequest.FromString,
                    response_serializer=Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_ReportResult__pb2.ReportResultResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'AIPrivateInterfaceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AIPrivateInterfaceService(object):
    """The service used by the PuglIA-developed back-end to connect with Lisari's gateway.
    """

    @staticmethod
    def FetchInitialData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AIPrivateInterfaceService/FetchInitialData',
            Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_FetchInitialData__pb2.FetchInitialDataRequest.SerializeToString,
            Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_FetchInitialData__pb2.FetchInitialDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportResult(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/AIPrivateInterfaceService/ReportResult',
            Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_ReportResult__pb2.ReportResultRequest.SerializeToString,
            Declarations_dot_Model_dot_AIPrivateInterfaceService_dot_ReportResult__pb2.ReportResultResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
